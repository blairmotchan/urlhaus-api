package com.blair.urlhaus.repository;

import com.blair.urlhaus.AbstractIntegrationTest;
import com.blair.urlhaus.domain.MalwareUrl;
import com.blair.urlhaus.util.MalwareUrlUtil;
import com.fasterxml.jackson.core.JsonProcessingException;
import org.junit.jupiter.api.Test;
import org.springframework.beans.factory.annotation.Autowired;

import java.util.List;

import static java.util.Arrays.asList;
import static org.assertj.core.api.Assertions.assertThat;

public class MalwareUrlRepositoryTest extends AbstractIntegrationTest {
    @Autowired
    private MalwareUrlRepository malwareUrlRepository;

    @Test
    public void get_expect_limit_and_offset() {
        malwareUrlRepository.insert(
                asList(
                        MalwareUrlUtil.buildMalwareUrl(1),
                        MalwareUrlUtil.buildMalwareUrl(2),
                        MalwareUrlUtil.buildMalwareUrl(3)
                )
        );

        List<MalwareUrl> results = malwareUrlRepository.get(1, 1);

        assertThat(results).hasSize(1);
        assertThat(results.get(0).getUrl()).isEqualTo("url2");
    }

    @Test
    public void getTotalCount() {
        malwareUrlRepository.insert(
                asList(
                        MalwareUrlUtil.buildMalwareUrl(1),
                        MalwareUrlUtil.buildMalwareUrl(2)
                )
        );

        long totalCount = malwareUrlRepository.getTotalCount();

        assertThat(totalCount).isEqualTo(2);
    }

    @Test
    public void searchByTag() throws JsonProcessingException {
        malwareUrlRepository.insert(
                asList(
                        MalwareUrlUtil.buildMalwareUrl(1),
                        MalwareUrlUtil.buildMalwareUrl(2)
                )
        );

        List<MalwareUrl> results  = malwareUrlRepository.searchByTag("tag");

        assertThat(results).hasSize(2);
    }
}