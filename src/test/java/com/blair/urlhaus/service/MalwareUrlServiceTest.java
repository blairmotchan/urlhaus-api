package com.blair.urlhaus.service;

import com.blair.urlhaus.domain.MalwareUrl;
import com.blair.urlhaus.repository.MalwareUrlRepository;
import com.blair.urlhaus.util.MalwareUrlUtil;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import java.util.Collections;

import static org.assertj.core.api.Assertions.assertThat;
import static org.mockito.Mockito.when;

@ExtendWith(MockitoExtension.class)
class MalwareUrlServiceTest {
    @Mock
    private MalwareUrlRepository malwareUrlRepository;

    @InjectMocks
    private MalwareUrlService malwareUrlService;

    @Test
    public void get() {
        Pageable page = Pageable.ofSize(1);
        MalwareUrl malwareUrl = MalwareUrlUtil.buildMalwareUrl(1);
        when(malwareUrlRepository.get(1, 0)).thenReturn(Collections.singletonList(malwareUrl));
        when(malwareUrlRepository.getTotalCount()).thenReturn(10L);

        Page<MalwareUrl> results = malwareUrlService.get(page);

        assertThat(results.getContent()).containsOnly(malwareUrl);
        assertThat(results.getTotalPages()).isEqualTo(10);
    }
}