package com.blair.urlhaus.controller;

import com.blair.urlhaus.AbstractIntegrationTest;
import com.blair.urlhaus.UrlHausApplication;
import com.blair.urlhaus.repository.MalwareUrlRepository;
import com.blair.urlhaus.util.MalwareUrlUtil;
import org.junit.jupiter.api.Test;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase;
import org.springframework.boot.test.autoconfigure.web.servlet.AutoConfigureMockMvc;
import org.springframework.boot.test.autoconfigure.web.servlet.WebMvcTest;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.http.MediaType;
import org.springframework.test.context.ActiveProfiles;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.web.servlet.MockMvc;
import org.springframework.test.web.servlet.request.MockMvcRequestBuilders;
import org.springframework.web.bind.annotation.RequestParam;
import org.testcontainers.junit.jupiter.Testcontainers;

import static java.util.Arrays.asList;
import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.*;

@AutoConfigureMockMvc
class MalwareUrlControllerIntegrationTest extends AbstractIntegrationTest {
    @Autowired
    private MockMvc mockMvc;

    @Autowired
    private MalwareUrlRepository malwareUrlRepository;

    @Test
    public void get() throws Exception {
        malwareUrlRepository.insert(
                asList(
                        MalwareUrlUtil.buildMalwareUrl(1),
                        MalwareUrlUtil.buildMalwareUrl(2),
                        MalwareUrlUtil.buildMalwareUrl(3)
                )
        );

        mockMvc.perform(MockMvcRequestBuilders.get("/malware-urls")
                .queryParam("page", "2")
                .queryParam("size", "1")
        )
                .andExpect(status().isOk())
                .andExpect(content().contentType(MediaType.APPLICATION_JSON))
                .andExpect(jsonPath("$.content.length()").value("1"))
                .andExpect(jsonPath("$.numberOfElements").value("1"))
                .andExpect(jsonPath("$.totalPages").value("3"));
    }
}